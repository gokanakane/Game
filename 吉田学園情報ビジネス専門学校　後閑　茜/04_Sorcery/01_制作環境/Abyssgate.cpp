//=============================================================================
//
// ビビアン通常魔法処理 [Abyssgate.cpp]
// Author : Gokan Akane
//
//=============================================================================
#include "manager.h"
#include "renderer.h"
#include "scene.h"
#include "scene2D.h"
#include "optionBase.h"
#include "abyssgate.h"
#include "playerBase.h"
#include "bullet.h"
#include "Explosion.h"
#include "enemyBase.h"
#include "scoreBase.h"

//=============================================================================
// 静的メンバ変数
//=============================================================================
bool CAbyssGate::m_bAbyssGateEmergence = false;
CAbyssGate::AbyssGateState CAbyssGate::m_state = CAbyssGate::ABYSSGATESTATE_NONE;

//*****************************************************************************
// ▽class CAbyssGate
//*****************************************************************************
//=============================================================================
// コンストラクタ
//=============================================================================
CAbyssGate::CAbyssGate() {}
//=============================================================================
// デストラクタ
//=============================================================================
CAbyssGate::~CAbyssGate() {}
//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CAbyssGate::Init(void)
{
	COption::Init();
	return S_OK;
}
//=============================================================================
// 終了処理
//=============================================================================
void CAbyssGate::Uninit(void)
{
	COption::Uninit();
}
//=============================================================================
// 更新処理
//=============================================================================
void CAbyssGate::Update(void)
{
	SetRotation(30.0f, 30.0f, 0.1f);
	switch (m_state)
	{
	case ABYSSGATESTATE_NONE:
		break;

	case ABYSSGATESTATE_CATCH:
		m_state = ABYSSGATESTATE_NONE;
		this->Uninit();
		break;
	}
	COption::Update();
}
//=============================================================================
// 描画処理
//=============================================================================
void CAbyssGate::Draw(void)
{
	COption::Draw();
}
