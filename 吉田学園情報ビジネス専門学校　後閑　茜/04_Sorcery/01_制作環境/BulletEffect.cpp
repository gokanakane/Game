//=============================================================================
//
// 弾のエフェクト処理 [BulletEffect.cpp]
// Author : Gokan Akane
//
//=============================================================================
#include "renderer.h"
#include "scene.h"
#include "scene2D.h"
#include "manager.h"
#include "effectBase.h"
#include "bulletEffect.h"
#include "playerBase.h"

//=============================================================================
// 静的メンバ変数
//=============================================================================

//*****************************************************************************
// ▽class CBulletEffect
//*****************************************************************************
//=============================================================================
// コンストラクタ
//=============================================================================
CBulletEffect::CBulletEffect() {}
//=============================================================================
// デストラクタ
//=============================================================================
CBulletEffect::~CBulletEffect() {}
//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CBulletEffect::Init(void)
{
	CEffect::Init();

	return S_OK;
}
//=============================================================================
// 終了処理
//=============================================================================
void CBulletEffect::Uninit(void)
{
	CEffect::Uninit();
}
//=============================================================================
// 更新処理
//=============================================================================
void CBulletEffect::Update(void)
{
	m_nLife--;				//寿命を減らす

							//寿命が減るにつれて幅と高さも小さくしていく
	m_fSizeH -= m_nLife*0.5f;
	m_fSizeW -= m_nLife*0.5f;

	//大きさを設定しなおす
	SetScene2D(m_pos, m_fSizeW, m_fSizeH);

	if (m_nLife < 0)
	{//寿命尽きた
		Uninit();
	}
}
//=============================================================================
// 描画処理
//=============================================================================
void CBulletEffect::Draw(void)
{
	CEffect::Draw();
}

