//=============================================================================
//
// スタート処理 [start.cpp]
// Author : YUTARO ABE
//
//=============================================================================

//*****************************************************************************
// ヘッダファイルのインクルード
//*****************************************************************************
#include "start.h"			// スタート
#include "manager.h"		// マネージャー
#include "renderer.h"		// レンダラー
#include "input.h"			// 入力
#include "font.h"			// フォント
#include "camera.h"			// カメラ
#include "game.h"			// ゲーム
#include "player.h"			// プレイヤー

//*****************************************************************************
// マクロ定義
//*****************************************************************************

//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************

//*****************************************************************************
// グローバル変数
//*****************************************************************************

//*****************************************************************************
// 静的メンバ変数
//*****************************************************************************
LPDIRECT3DTEXTURE9 CStart::m_pTexture = NULL;

//=============================================================================
// コンストラクタ								(public)	*** CItem ***
//=============================================================================
CStart::CStart() : CScene3D(CScene::PRIORITY_5, CScene::OBJTYPE_START)
{
	m_AnimCounter = 0;
	m_AnimPattern = 0;
}

//=============================================================================
// デストラクタ									(public)	*** CItem ***
//=============================================================================
CStart::~CStart()
{

}

//=============================================================================
//	アイテムの生成
//=============================================================================
CStart *CStart::Create(D3DXVECTOR3 pos, D3DXVECTOR3 rot, D3DXVECTOR3 size)
{
	CStart *p3Dobject = {};

	if (p3Dobject == NULL)
	{//	アイテムの生成
		p3Dobject = new CStart;
		if (p3Dobject != NULL)
		{//アイテムの初期化
			p3Dobject->Init(pos, rot, size);
		}
	}
	return p3Dobject;
}

//=============================================================================
// 初期化処理									(public)	*** CItem ***
//=============================================================================
HRESULT CStart::Init(D3DXVECTOR3 pos, D3DXVECTOR3 rot, D3DXVECTOR3 size)
{
	CScene3D::SetInitAll(pos, rot, size, D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f), D3DXVECTOR2(0.1f, 1.0f), CScene3D::SCENE3DTYPE_BILLBOARD);
	CScene3D::Init();
	CScene3D::BindTexture(m_pTexture);
	
	return S_OK;
}

//=============================================================================
// 終了処理										(public)	*** CItem ***
//=============================================================================
void CStart::Uninit(void)
{
	CScene3D::Uninit();
}

//=============================================================================
// 更新処理										(public)	*** CItem ***
//=============================================================================
void CStart::Update(void)
{
	D3DXVECTOR3 pos = CScene3D::Getpos();
	D3DXVECTOR3 size = CScene3D::Getsize();
	D3DXCOLOR col = CScene3D::Getcol();
	bool bDelete = false;

	m_AnimCounter++;

	if (m_AnimCounter % 4 == 0)
	{
		m_AnimPattern = (m_AnimPattern + 1) % 10;
	}

	if (180 < m_AnimCounter)
	{
		if (0.0f < col.a)
		{
			col.a -= 0.06f;
		}
		else
		{
			bDelete = true;
		}
	}

	CScene3D::Setpos(D3DXVECTOR3(CGame::GetPlayer()->Getpos().x, pos.y, pos.z));
	CScene3D::SetTex(10, m_AnimPattern, D3DXVECTOR2(0.1f, 1.0f), D3DXVECTOR2(0.0f, 0.0f));
	CScene3D::Setcol(col);
	CScene3D::Update();

	if (bDelete == true)
	{
		Uninit();
	}
}

//=============================================================================
// 描画処理										(public)	*** CItem ***
//=============================================================================
void CStart::Draw(void)
{
	CScene3D::Draw();
}
//=============================================================================
// テクスチャの読み込み
//=============================================================================
HRESULT CStart::Load(void)
{
	// デバイス取得
	LPDIRECT3DDEVICE9 pDevice = CManager::GetRenderer()->GetDevice();

	D3DXCreateTextureFromFile(pDevice, "data\\TEXTURE\\Effect_Up.png", &m_pTexture);

	return S_OK;
}
//=============================================================================
// アンロード処理								(public)	*** CItem ***
//=============================================================================
void CStart::Unload(void)
{
	// テクスチャの破棄
	if (m_pTexture != NULL)
	{
		m_pTexture->Release();
		m_pTexture = NULL;
	}
}
